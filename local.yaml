services:
  api:
    restart: always
    build:
      context: ./backend
      dockerfile: ../docker/local/express/Dockerfile
    ports:
      - "5050:5050"
    volumes:
      - /app/node_modules
      - ./backend:/app
    depends_on:
      - mongodb
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongodb
      FORCE_COLOR: "true"
    networks:
      - mern-invoice-network

  client:
    build:
      context: ./frontend
      dockerfile: ./docker/local/Dockerfile
    restart: on-failure
    ports:
      - "5173:5173"
    volumes:
      - /app/node_modules
      - ./frontend:/app
    networks:
      - mern-invoice-network

  mongodb:
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - mern-invoice-network

  mongo-express:
    image: mongo-express:1.0
    restart: always
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    networks:
      - mern-invoice-network

  mailhog:
    image: mailhog/mailhog
    restart: always
    ports:
      - "8026:8025"
      - "1025:1025"
    networks:
      - mern-invoice-network

  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - pdf_volume:/app/docs
    networks:
      - mern-invoice-network

networks:
  mern-invoice-network:
    driver: bridge

volumes:
  mongodb-data:
  static_volume:
  pdf_volume:
